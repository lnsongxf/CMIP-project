%% Computing Inflation and Monetary Policy Variables
% Compute Indices where it doesn't matter
inf_target = 0.00            ;   % Inflation Target
i_target   = rs_ss+inf_target;   % Nominal Rate Target
 
% Construct the index of admissible values
if ~isemprty(zlb_index)
    mu_index=(mu_vec>surplus_cut&mu_vec<deficit_cut & mu_vec<mu_vec(zlb_index));
else
end
[~,index_aux]=find(mu_index==1,1,'first');
% if index_aux>1
%     mu_index(index_aux-1)=1;
% end
[~,index_aux]=find(mu_index==1,1,'last');
if index_aux<length(mu_index);
    mu_index(index_aux+1)=1;
end

% Find Policy
if i_target<=max(r_d_vec(mu_index)) & i_target>=min(r_d_vec(mu_index))
   mu_ss_target  = interp1(r_d_vec(mu_index),mu_vec(mu_index),i_target,'pchip');
   display('Liquidity ratio target is:'); 
   mu_ss_target
else
   display('Cannot implement that target'); 
end

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Policy Spread
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

MB_ss1= mu_ss_target*D_ss        ; 
MB_t  = MB_ss1*ones(T+1,1)         ;  % constant along transition
ND_t  = D_t                      ;
mub_t = mu_ss_target*ones(T+1,1)   ;
mu_t = mu_ss_target*ones(T+1,1)   ;
P_t   = ones(T+1,1)                ;
dP_t  = inf_target*ones(T+1,1)     ;
id_t  = i_target*ones(T+1,1)       ; 

for tt=1:T
    if rsp_t(tt)> Dr_zlb
        mub_t(tt+1) = interp1(Dr(mu_index),mu_vec(mu_index),rsp_t(tt),'pchip');
        id_t(tt+1)  = interp1(mu_vec(mu_index), r_d_vec(mu_index) ,mub_t(tt+1),'pchip');
    else
        mub_t(tt+1) = mu_vec(zlb_index);
        id_t(tt+1)  = 0;
    end
    dP_t(tt+1)  = id_t(tt+1)-rs_t(tt);
    P_t(tt+1)   = P_t(tt)*(1+dP_t(tt+1)*dt);
    ND_t(tt+1)  = D_t(tt)*P_t(tt+1);
    MB_t(tt+1)  = mub_t(tt+1)*D_t(tt);
end
M_t   = [D_ss;D_t'].*(mub_t +0.1*ones(T+1,1).*(mub_t==mu_vec(zlb_index)));
M0_t  = M_t-MB_t;

index_1=(2:T+1);

figure(cc);
plot(index_1-1,(P_t(index_1)),'LineWidth',3,'color',[.1 .1 .7]); title('Price Path - Constant Monetary Rule'); 
xlabel('Time','FontSize',25); ylabel('P_t','FontSize',25); title('Price Path'); grid on;
[yout]=get(gca,'ylim');
line([T_pre T_pre],[yout(1) yout(2)],'Color','k','LineWidth',1,'LineStyle','-');
line([T_post T_post],[yout(1) yout(2)],'Color','k','LineWidth',1,'LineStyle','-');
h=patch([T_pre T_post T_post T_pre],[yout(1) yout(1) yout(2) yout(2)],[0.9 0.9 0.9]); alpha(h,0.2);
ftitle=title('Price Path','interpreter','latex','fontsize',20); grid on;
axis tight; xlim([1 20]);
formataxis(gca);
if printit==1
    imprime(['fig' nameplot num2str(cc)]);
    imprpdf(['fig' nameplot num2str(cc)]);
end
cc=cc+1;

figure(cc);
plot(index_1-1,M0_t(index_1),'LineWidth',3,'color',[.1 .1 .7]); hold on;
plot(index_1-1,MB_t(index_1),'LineWidth',3,'color',[.7 .1 .1]);
xlabel('Time','FontSize',25);  grid on;
[yout]=get(gca,'ylim');
line([T_pre T_pre],[yout(1) yout(2)],'Color','k','LineWidth',1,'LineStyle','-');
line([T_post T_post],[yout(1) yout(2)],'Color','k','LineWidth',1,'LineStyle','-');
h=patch([T_pre T_post T_post T_pre],[yout(1) yout(1) yout(2) yout(2)],[0.9 0.9 0.9]); alpha(h,0.2);
ftitle=title('Cash Holdings','interpreter','latex','fontsize',20); grid on;
axis tight; xlim([1 20]);
legend('Currency','Reserves'); formatlegend('Best');
formataxis(gca);
if printit==1
    imprime(['fig' nameplot num2str(cc)]);
    imprpdf(['fig' nameplot num2str(cc)]);
end
cc=cc+1;

figure(cc);
plot(index_1-1,dP_t(index_1)*100,'LineStyle',':','LineWidth',4,'color',[.1 .1 .7]); hold on;
plot(index_1-1,id_t(index_1)*100,'color',[220 85 0]/255,'LineStyle','--','LineWidth',4); 
plot(index_1-1,rs_t(index_1-1)*100,'color',[255 195 0]/255,'LineWidth',4); grid on;
plot(index_1-1,inf_target*100+0*rs_t(index_1-1),'k-.','LineWidth',2); grid on;
title('Components for Fisher Equation')
legend('Inflation','Nominal Rate','Real Rate','Inflation Target'); axis tight;
xlabel('Time','FontSize',25); ylabel('$\%$','interpreter','latex','FontSize',25);
[yout]=get(gca,'ylim');
line([T_pre+1 T_pre+1],[yout(1) yout(2)],'Color','k','LineWidth',1,'LineStyle','-');
line([T_post T_post],[yout(1) yout(2)],'Color','k','LineWidth',1,'LineStyle','-');
h=patch([T_pre+1 T_post T_post T_pre+1],[yout(1) yout(1) yout(2) yout(2)],[0.9 0.9 0.9]); alpha(h,0.2);
ftitle=title('Fisher Equation Decomposition','interpreter','latex','fontsize',17); grid on;
axis tight; xlim([1 20]);
formataxis(gca);
formatlegend('northeast');
if printit==1
    imprime(['fig' nameplot num2str(cc)]);
    imprpdf(['fig' nameplot num2str(cc)]);
end
cc=cc+1;
